<?xml version="1.0"?>
<ruleset name="Bizurkur">
    <description>Bizurkur code standards</description>

    <file>src/</file>
    <file>tests/</file>

    <config name="ignore_warnings_on_exit" value="1" />

    <arg name="basepath" value="." />
    <arg name="colors" />
    <arg name="tab-width" value="4" />
    <arg name="parallel" value="75" />
    <arg value="wp" />

    <!-- Don't hide tokenizer exceptions -->
    <rule ref="Internal.Tokenizer.Exception">
        <type>error</type>
    </rule>

    <!-- Include the whole PSR2 standard (includes PSR1) -->
    <rule ref="PSR2" />
    <rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
        <!-- Private properties MUST not be prefixed with an underscore -->
        <type>error</type>
    </rule>
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <!-- Private methods MUST not be prefixed with an underscore -->
        <type>error</type>
    </rule>

    <rule ref="Generic.Arrays.ArrayIndent" />
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <rule ref="Generic.Classes.DuplicateClassName" />

    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter" />

    <rule ref="Generic.Commenting.Todo" />
    <rule ref="Generic.Commenting.DocComment" />
    <rule ref="Generic.Commenting.DocComment.MissingShort">
        <!-- A description SHOULD be there, not MUST be there -->
        <type>warning</type>
        <severity>3</severity>
    </rule>
    <rule ref="Generic.Commenting.DocComment.ParamNotFirst">
        <!-- Sometimes @see or similar makes more sense to be first -->
        <type>warning</type>
        <severity>1</severity>
    </rule>
    <rule ref="Generic.Commenting.DocComment.TagValueIndent">
        <!-- This conflicts with tags SHOULD NOT be grouped together -->
        <type>warning</type>
        <severity>1</severity>
    </rule>
    <rule ref="Generic.Commenting.DocComment.SpacingBeforeTags">
        <!-- If there's no description, there shouldn't be a blank line -->
        <type>warning</type>
        <severity>1</severity>
    </rule>

    <rule ref="Generic.ControlStructures.InlineControlStructure" />

    <rule ref="Generic.Files.ByteOrderMark" />
    <rule ref="Generic.Files.EndFileNewline" />
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="80" />
            <property name="absoluteLineLimit" value="120" />
        </properties>
    </rule>
    <rule ref="Generic.Files.LineLength.TooLong">
        <message>Line longer than %s characters; contains %s characters</message>
        <severity>3</severity>
    </rule>
    <rule ref="Generic.Files.LineLength.MaxExceeded">
        <message>Line contains %2$s chars, which is more than the limit of %1$s</message>
        <type>warning</type>
    </rule>
    <rule ref="Generic.Files.OneObjectStructurePerFile" />

    <rule ref="Generic.Formatting.SpaceAfterCast" />

    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <properties>
            <property name="complexity" value="5" />
            <property name="absoluteComplexity" value="15" />
        </properties>
    </rule>
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="3" />
            <property name="absoluteNestingLevel" value="5" />
        </properties>
    </rule>

    <rule ref="Generic.NamingConventions.CamelCapsFunctionName" />
    <rule ref="Generic.NamingConventions.ConstructorName" />

    <rule ref="Generic.PHP.BacktickOperator" />
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag" />
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag.Found">
        <!-- This is likely an error, but don't force that assumption -->
        <type>warning</type>
    </rule>
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.DisallowAlternativePHPTags" />
    <rule ref="Generic.PHP.DisallowShortOpenTag" />
    <rule ref="Generic.PHP.DiscourageGoto" />
    <rule ref="Generic.PHP.DiscourageGoto.Found">
        <!-- Why did PHP add GOTO? Terrible. -->
        <message>Use of GOTO is not allowed.</message>
        <type>error</type>
    </rule>
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array"
                value="var_dump=>null,print=>echo,create_function=>null,eval=>null"
            />
        </properties>
    </rule>
    <rule ref="Generic.PHP.NoSilencedErrors" />

    <rule ref="Generic.Strings.UnnecessaryStringConcat">
        <properties>
            <property name="allowMultiline" value="true" />
        </properties>
    </rule>

    <rule ref="Generic.WhiteSpace.DisallowTabIndent" />
    <rule ref="Generic.WhiteSpace.ScopeIndent" />

    <rule ref="Squiz.Classes.ClassDeclaration" />

    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration" />
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration" />

    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1" />
        </properties>
    </rule>

    <rule ref="Squiz.PHP.CommentedOutCode" />

    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>

    <rule ref="Squiz.WhiteSpace.MemberVarSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="spacingBeforeFirst" value="0" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />
</ruleset>
